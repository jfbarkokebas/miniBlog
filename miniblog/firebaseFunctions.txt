> getAuth() 

    -> cria uma instancia que faz as autenticações de um usuario

    uso: const aut = getAuth()

> signOut() 

    -> faz o logout do usuario, recebe por parametro o AUTH.

    USO: const logout = ()=> {
        //deal with memory leak

        signOut(AUTH)
    }


> createUserWithEmailAndPassword()
    
    cria um usuario autenticado para ser usado na função UPDATEPROFILE()

    Uso: 
     
    const {user} = await  createUserWithEmailAndPassword(
                auth,
                data.email,
                data.password
            )

> updateProfile() 

    passsa o nome para o usuario criado e lança no firebase

    await updateProfile( USER, {displayName: data.displayName})


> sigInWithEmailAndPassword()

   Um exemplo de uso com os possiveis erros:

            const login =async (data) =>{

                checkIfIsCancelled()

                setLoading(true)
                setError(false)

                try {
            
                    signInWithEmailAndPassword(auth, data.email, data.password)
                    setLoading(false)

                } catch (error) {

                    let systemErrorMessage

                    if(error.message.includes("use-not-found")){
                    systemErrorMessage = "Usuário não encontrado"

                }else if (error.message.includes("wrong-password")){
                    systemErrorMessage = "Senha incorreta"
                }else{
                    systemErrorMessage = "Ocorreu erro, por favor tente mais tarde."
                }

                setError(systemErrorMessage)
                setLoading(false)
            }
        }

